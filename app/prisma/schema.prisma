
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          String?
  accounts      Account[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Task Task[] 
  team Team[]
  @@map("users")
  
}
model Team{
  id Int @id @default(autoincrement())
  name String? @default("New team")
  membres User[]
}
model Task {
  id        Int    @id @default(autoincrement()) 
  title     String  
  description  String  @db.Text
  status       String
  taskName  String
  priority     Priority @default(TODO) 
  createdAt DateTime @default(now()) 
  udpadetAt DateTime @updatedAt
  assigneTo   User @relation(fields: [assignToId] , references: [id])
  assignToId String 
  

}
enum Priority{
  TODO
  INPROGRESS
  DONE
}
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}



model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
  @@map("verification_tokens")
}